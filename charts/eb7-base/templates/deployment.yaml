apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.fullname" . }}
  namespace: {{ .Values.namespace | default "default" }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
  {{- if .Values.annonations }}
  annotations: {{ toYaml .Values.annonations | nindent 4}}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  {{- if .Values.updateStrategy.enabled }}
  strategy:
    type: {{ .Values.updateStrategy.type }}
    rollingUpdate:
      maxSurge: {{ .Values.updateStrategy.maxSurge }}
      maxUnavailable: {{ .Values.updateStrategy.maxUnavailable }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secretprovider: {{ include (print $.Template.BasePath "/secret-provider.yaml") . | sha256sum }}
        tag: "{{ .Values.image.tag }}"
        {{- if .Values.annonations }} {{- toYaml .Values.annonations | nindent 8 }} {{- end }}
      labels:
        {{- include "app.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          {{- if .Values.args }}
          args: {{- toYaml .Values.args | nindent 10}}
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.service.enabled }}
          ports:
          {{- range .Values.service.ports }}
            - containerPort: {{ .targetPort }}
              protocol: {{ .protocol }}
              name: {{ .name }}
          {{- end }}
          {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe:
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            {{- toYaml .Values.livenessProbe.healthcheck | nindent 12 }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            {{- toYaml .Values.readinessProbe.healthcheck | nindent 12 }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          {{- end }}
          {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.environments }}
          envFrom:
            - configMapRef:
                name: {{ include "app.fullname" . }}
          {{- end }}
          {{- if .Values.awsSecrets }}
          env:
          {{- range .Values.awsSecrets }}
            - name: {{ .objectAlias | quote }}
              valueFrom:
                secretKeyRef:
                  key: {{ .objectAlias | quote }}
                  name: "{{ include "app.secretsProviderName" $ }}"
          {{- end }}
          volumeMounts:
            - mountPath: /mnt/secrets-store
              name: secrets-store-inline
              readOnly: true
          {{- end }}
      {{- if .Values.awsSecrets }}
      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ include "app.secretsProviderName" . }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
