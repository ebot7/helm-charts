{{- if eq .Values.resourceType "CronJob" }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "app.fullname" . }}
  namespace: {{ .Values.namespace | default "default" }}
  labels:
    {{- include "app.selectorLabels" . | nindent 4 }}
  annotations: 
    checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    checksum/secretprovider: {{ include (print $.Template.BasePath "/secret-provider.yaml") . | sha256sum }}
    tag: "{{ .Values.image.tag }}"
    aws.amazon.com/cloudwatch-agent-ignore: "{{ .Values.disableCloudwatchMetrics }}"
    {{- with .Values.annotations }} {{- toYaml . | nindent 4 }} {{- end }}
spec:
  schedule: {{ .Values.schedule | quote }}
  concurrencyPolicy: {{ .Values.concurrencyPolicy | default "Allow" }}
  failedJobsHistoryLimit: {{ .Values.failedJobsHistoryLimit | default 10 }}
  successfulJobsHistoryLimit: {{ .Values.successfulJobsHistoryLimit | default 10 }}
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
            checksum/secretprovider: {{ include (print $.Template.BasePath "/secret-provider.yaml") . | sha256sum }}
            tag: "{{ .Values.image.tag }}"
            aws.amazon.com/cloudwatch-agent-ignore: "{{ .Values.disableCloudwatchMetrics }}"
            {{- with .Values.annotations }} {{- toYaml . | nindent 12 }} {{- end }}
          labels:
            {{- include "app.selectorLabels" . | nindent 12 }}
        spec:
          serviceAccountName: {{ .Values.serviceAccountName }}
          {{- with .Values.jobSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          containers:
          - name: {{ .Chart.Name }}
            image:  "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            {{- with .Values.environments }}
            envFrom:
              - configMapRef:
                  name: {{ include "app.fullname" $ }}
            {{- end }}
            {{- if or (.Values.awsSecrets) (.Values.addHostIPEnv) }}
            env:
            {{- if .Values.addHostIPEnv }}
              - name: "K8S_NODE_IP"
                valueFrom:
                  fieldRef:
                    fieldPath: status.hostIP
            {{- end }}
            {{- with .Values.awsSecrets }}
            {{- range . }}
              - name: {{ .objectAlias | quote }}
                valueFrom:
                  secretKeyRef:
                    key: {{ .objectAlias | quote }}
                    name: "{{ include "app.secretsProviderName" $ }}"
            {{- end }}
            {{- end }}
            {{- end }}
            {{- with .Values.commandOverride }}
            command: {{- toYaml . | nindent 14 }}
            {{- end }}
            {{- with .Values.argsOverride }}
            args: {{- toYaml . | nindent 14 }}
            {{- end }}
            {{- with .Values.resources }}
            resources:
              {{- toYaml . | nindent 14 }}
            {{- end }}
            {{- with .Values.servicePorts }}
            ports:
            {{- range . }}
              - containerPort: {{ .targetPort }}
                protocol: {{ .protocol | default "TCP" }}
                name: {{ .name }}
            {{- end }}
            {{- end }}
            {{- with .Values.podSecurityContext }}
            securityContext:
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- with .Values.lifecycle }}
            lifecycle:
              {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- if or (.Values.awsSecrets) (.Values.persistentVolumes) (.Values.hostVolumes) (.Values.enableSharedMemoryVolume) }}
            volumeMounts:
            {{- if .Values.awsSecrets }}
              - mountPath: /mnt/secrets-store
                name: secrets-store-inline
                readOnly: true
            {{- end }}
            {{- if .Values.enableSharedMemoryVolume }}
              - mountPath: /dev/shm
                name: dshm
            {{- end }}
            {{- with .Values.hostVolumes }}
            {{- range . }}
              - name: {{ .name }}
                mountPath: {{ .mountPath }}
                readOnly: {{ .readOnly | default "false" }}
            {{- end }}
            {{- end }}
            {{- with .Values.persistentVolumes }}
            {{- range . }}
              - name: {{ .name }}
                mountPath: {{ .mountPath }}
                subPath: {{ include "app.fullname" $ }}-{{ .name }}
            {{- end }}
            {{- end }}
            {{- end }}
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          {{- if or (.Values.awsSecrets) (.Values.persistentVolumes) (.Values.hostVolumes) (.Values.enableSharedMemoryVolume) }}
          volumes:
          {{- with .Values.awsSecrets }}
            - name: secrets-store-inline
              csi:
                driver: secrets-store.csi.k8s.io
                readOnly: true
                volumeAttributes:
                  secretProviderClass: {{ include "app.secretsProviderName" $ }}
          {{- end }}
          {{- if .Values.enableSharedMemoryVolume }}
            - name: dshm
              emptyDir:
                medium: Memory
          {{- end }}
          {{- with .Values.hostVolumes }}
          {{- range . }}
            - name: {{ .name }}
              hostPath:
                path: {{ .hostPath }}
          {{- end }}
          {{- end }}
          {{- with .Values.persistentVolumes }}
          {{- range . }}
            - name: {{ .name }}
              persistentVolumeClaim:
                claimName: {{ include "app.fullname" $ }}-{{ .name }}
          {{- end }}
          {{- end }}
          {{- end }}
          restartPolicy: {{ .Values.restartPolicy | default "OnFailure" }}
{{- end }}