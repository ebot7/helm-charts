{{- if eq .Values.resourceType "DaemonSet" }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "app.fullname" . }}
  namespace: {{ .Values.namespace | default "default" }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations: {{ toYaml . | nindent 4}}
  {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secretprovider: {{ include (print $.Template.BasePath "/secret-provider.yaml") . | sha256sum }}
        tag: "{{ .Values.image.tag }}"
        {{- with .Values.annotations }} {{- toYaml . | nindent 8 }} {{- end }}
      labels:
        {{- include "app.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ .Values.serviceAccountName }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.argsOverride }}
          args: {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- with .Values.commandOverride }}
          command: {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.servicePorts }}
          ports:
          {{- range . }}
            - containerPort: {{ .targetPort }}
              protocol: {{ .protocol | default "TCP" }}
              name: {{ .name }}
          {{- end }}
          {{- end }}
          {{- with .Values.lifecycle }}
          lifecycle:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.healthCheckProbes }}
          livenessProbe:
            failureThreshold: {{ .failureThreshold  }}
            {{- with .healthCheck }}{{- toYaml . | nindent 12 }}{{- end}}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            periodSeconds: {{ .periodSeconds  }}
          {{- end }}
          {{- with .Values.healthCheckProbes }}
          readinessProbe:
            failureThreshold: {{ .failureThreshold  }}
            {{- with .healthCheck }}{{- toYaml . | nindent 12 }}{{- end}}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            periodSeconds: {{ .periodSeconds }}
          {{- end }}
          {{- with .Values.startupProbes }}
          startupProbe:
            {{- with .healthCheck }}{{- toYaml . | nindent 12 }}{{- end}}
            failureThreshold: {{ .failureThreshold  }}
            periodSeconds: {{ .periodSeconds  }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.environments }}
          envFrom:
            - configMapRef:
                name: {{ include "app.fullname" $ }}
          {{- end }}
          {{- with .Values.awsSecrets }}
          env:
          {{- range . }}
            - name: {{ .objectAlias | quote }}
              valueFrom:
                secretKeyRef:
                  key: {{ .objectAlias | quote }}
                  name: "{{ include "app.secretsProviderName" $ }}"
          {{- end }}
          {{- end }}
          {{- if or (.Values.awsSecrets) (.Values.persistentVolumes) (.Values.hostVolumes) (.Values.enableSharedMemoryVolume) }}
          volumeMounts:
          {{- if .Values.awsSecrets }}
            - mountPath: /mnt/secrets-store
              name: secrets-store-inline
              readOnly: true
          {{- end }}
          {{- if .Values.enableSharedMemoryVolume }}
            - mountPath: /dev/shm
              name: dshm
          {{- end }}
          {{- with .Values.hostVolumes }}
          {{- range . }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              readOnly: {{ .readOnly | default "false" }}
          {{- end }}
          {{- end }}
          {{- with .Values.persistentVolumes }}
          {{- range . }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
          {{- end }}
          {{- end }}
          {{- end }}
      {{- if or (.Values.awsSecrets) (.Values.persistentVolumes) (.Values.hostVolumes) (.Values.enableSharedMemoryVolume) }}
      volumes:
      {{- with .Values.awsSecrets }}
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ include "app.secretsProviderName" $ }}
      {{- end }}
      {{- if .Values.enableSharedMemoryVolume }}
        - name: dshm
          emptyDir:
            medium: Memory
      {{- end }}
      {{- with .Values.hostVolumes }}
      {{- range . }}
        - name: {{ .name }}
          hostPath:
            path: {{ .hostPath }}
      {{- end }}
      {{- end }}
      {{- with .Values.persistentVolumes }}
      {{- range . }}
        - name: {{ .name }}
          persistentVolumeClaim:
            claimName: {{ .name }}
      {{- end }}
      {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- include "app.affinityTolerationRules" . | nindent 6 }}
{{- end }}